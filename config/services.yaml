# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.scrape.main.domain: '%env(MAIN_DOMAIN)%'
    app.directory.for.scraped.data: '%kernel.project_dir%/scraped'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    GuzzleHttp\ClientInterface:
        class: 'GuzzleHttp\Client'
        arguments:
            $config:
                verify: false
        
    App\Client\MultipleRequestsApiClient: ~

    App\Client\MultipleRequestsApiClientInterface: '@App\Client\MultipleRequestsApiClient'

    App\Client\ApiClientInterface: '@App\Client\GuzzleApiClient'

    App\Client\GuzzleApiClient:
        stack:
            -   App\Client\Exceptions\ExceptionsToHttpExceptionsClientDecorator: ~
            -   App\Client\Exceptions\LogExceptionsClientDecorator: ~
            -   App\Client\Cache\CacheGettingApiClientDecorator:
                    $cachePool: '@app.scraped.data'
            -   App\Client\Cache\CacheSavingApiClientDecorator:
                    $cachePool: '@app.scraped.data'
            -   App\Client\GuzzleApiClient: ~
    
    App\Client\Cache\Key\ApiCacheKeyGeneratorInterface:
        class: 'App\Client\Cache\Key\ApiCacheKeyGenerator'
    
    App\Client\Cache\Key\ApiCacheKeyGenerator: ~
    
    serializer.normalizer.object:
        class: 'Symfony\Component\Serializer\Normalizer\ObjectNormalizer'
